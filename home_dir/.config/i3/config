# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#


###--- i3 coloring ---###
# Make it clear when failed using red - otherwise set i3 colors with wal from xresources
set_from_resource $bg           i3wm.color3 #ff0000
set_from_resource $bg-alt       i3wm.color0 #ff0000
set_from_resource $fg           i3wm.color15 #ff0000
set_from_resource $fg-alt       i3wm.color2 #ff0000
set_from_resource $hl           i3wm.color4 #ff0000

# class                 border  backgr. text indicator      child_border
client.focused          $fg-alt $bg     $fg  $fg-alt        $hl
client.focused_inactive $bg     $bg-alt $fg  $bg            $bg
client.unfocused        $bg     $bg-alt $fg  $bg            $bg
client.urgent           $bg     $bg-alt $fg  $bg            $bg
client.placeholder      $bg     $bg-alt $fg  $bg            $bg

client.background       $bg



# TODO: make colors more beautiful
# set $bg-color 	         #2f343f
# set $inactive-bg-color   #2f343f
# set $text-color          #f3f4f5
# set $inactive-text-color #676E7D
# set $urgent-bg-color     #E53935


# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $sup Mod1
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# TODO: search for fonts, and copy to ~/.fonts
# lxappearence (???infinality: better font rendering)
#font pango:monospace 13
#font pango:Sans 16
#font pango: xos4 Terminus 13

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start firefox
bindsym $mod+b exec firefox

# start ranger
bindsym $mod+r exec urxvt -name ranger -e ranger
#bindsym $mod+r exec termite -e ranger

# TODO: shortcut to start virtual windows

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# TODO: opacity is not working, even when compton is running
bindsym $mod+d exec rofi -show run -lines 3 -eh 2 -opacity "70"
#bindsym $mod+d exec rofi -show run -lines 3 -eh 2 -opacity "70" -bw 0 -bc "$bg" -bg "$bg" -fg "$fg" -hlbg "$bg" -hlfg "#9575cd"
#bindsym $mod+d exec rofi -show run -lines 3 -eh 2 -width 100 -padding 800 -opacity "85" -bw 0 -bc "$bg" -bg "$bg" -fg "$fg" -hlbg "$bg" -hlfg "#9575cd"
#bindsym $mod+d exec dmenu_run -l 100 -nb black -nf lightgreen


# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# TODO: replace c and v
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# TODO: create bind for these
# right now there is no need for stacking and tabbing,
# however it might be needed in the future
# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# set variables for workplaces
# font awesome icons -> done in polybar config
set $workplace1 "1"
set $workplace2 "2"
set $workplace3 "3"
set $workplace4 "4"
set $workplace5 "5"
set $workplace6 "6"
set $workplace7 "7"
set $workplace8 "8"
set $workplace9 "9"
set $workplace10 "10"
set $workplace11 "11"
set $workplace12 "12"
set $workplace13 "13"
set $workplace14 "14"
set $workplace15 "15"
set $workplace16 "16"
set $workplace17 "17"
set $workplace18 "18"
set $workplace19 "19"


# switch to workspace
bindsym $mod+1 workspace $workplace1
bindsym $mod+2 workspace $workplace2
bindsym $mod+3 workspace $workplace3
bindsym $mod+4 workspace $workplace4
bindsym $mod+5 workspace $workplace5
bindsym $mod+6 workspace $workplace6
bindsym $mod+7 workspace $workplace7
bindsym $mod+8 workspace $workplace8
bindsym $mod+9 workspace $workplace9
bindsym $mod+0 workspace $workplace10
bindsym $sup+1 workspace $workplace11
bindsym $sup+2 workspace $workplace12
bindsym $sup+3 workspace $workplace13
bindsym $sup+4 workspace $workplace14
bindsym $sup+5 workspace $workplace15
bindsym $sup+6 workspace $workplace16
bindsym $sup+7 workspace $workplace17
bindsym $sup+8 workspace $workplace18
bindsym $sup+9 workspace $workplace19

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workplace1
bindsym $mod+Shift+2 move container to workspace $workplace2
bindsym $mod+Shift+3 move container to workspace $workplace3
bindsym $mod+Shift+4 move container to workspace $workplace4
bindsym $mod+Shift+5 move container to workspace $workplace5
bindsym $mod+Shift+6 move container to workspace $workplace6
bindsym $mod+Shift+7 move container to workspace $workplace7
bindsym $mod+Shift+8 move container to workspace $workplace8
bindsym $mod+Shift+9 move container to workspace $workplace9
bindsym $mod+Shift+0 move container to workspace $workplace10
bindsym $sup+Shift+1 move container to workspace $workplace11
bindsym $sup+Shift+2 move container to workspace $workplace12
bindsym $sup+Shift+3 move container to workspace $workplace13
bindsym $sup+Shift+4 move container to workspace $workplace14
bindsym $sup+Shift+5 move container to workspace $workplace15
bindsym $sup+Shift+6 move container to workspace $workplace16
bindsym $sup+Shift+7 move container to workspace $workplace17
bindsym $sup+Shift+8 move container to workspace $workplace18
bindsym $sup+Shift+9 move container to workspace $workplace19


# move focused workspace to specific monitor
bindsym $sup+Shift+Right move workspace to output right
bindsym $sup+Shift+Left move workspace to output left
bindsym $sup+Shift+Up move workspace to output up
bindsym $sup+Shift+Down move workspace to output down

bindsym $sup+Shift+l move workspace to output right
bindsym $sup+Shift+h move workspace to output left
bindsym $sup+Shift+k move workspace to output up
bindsym $sup+Shift+j move workspace to output down

# TODO: do not hardcode these monitor values
#bindsym $sup+1 move workspace to output DP-2-2
#bindsym $sup+2 move workspace to output DP-2-3
#bindsym $sup+3 move workspace to output eDP-1



# start programs on specific workspaces
assign [class="Firefox"] $workplace1

assign [class="UXTerm"] $workplace2
#assign [class="Termite"] $workplace2

assign [class="Steam"] $workplace3

assign [class="URxvt"] $workplace4

assign [class="Slack"] $workplace5
assign [class="Skype"] $workplace5

assign [class="mpv"] $workplace7

assign [class="VirtualBox Machine"] $workplace9


# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
#bindsym $mod+Return exec --no-startup-id i3-msg 'workspace 2; exec termite'
bindsym $mod+Return exec termite
#; move container to workspace $workplace2
bindsym $mod+Shift+Return exec termite


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# TODO: replace with solution that does not use mouse (maybe rofi or dmenu)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exec ~/Scripts/custom_exit.sh -logout

# resize window (you can also use the mouse for that)

bindsym $mod+y resize shrink width 10 px or 10 ppt
bindsym $mod+u resize grow height 10 px or 10 ppt
bindsym $mod+i resize shrink height 10 px or 10 ppt
bindsym $mod+o resize grow width 10 px or 10 ppt
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter, Escape or q
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
}
bindsym $mod+n mode "resize"

mode "mouse" {
        set $s 5
        set $l 50

        bindsym h exec --no-startup-id xdotool mousemove_relative -- -$s  0
        bindsym j exec --no-startup-id xdotool mousemove_relative --  0   $s
        bindsym k exec --no-startup-id xdotool mousemove_relative --  0  -$s
        bindsym l exec --no-startup-id xdotool mousemove_relative --  $s  0

        bindsym Shift+h exec --no-startup-id xdotool mousemove_relative -- -$l   0
        bindsym Shift+j exec --no-startup-id xdotool mousemove_relative --  0    $l
        bindsym Shift+k exec --no-startup-id xdotool mousemove_relative --  0   -$l
        bindsym Shift+l exec --no-startup-id xdotool mousemove_relative --  $l   0

        bindsym Left  exec --no-startup-id xdotool mousemove_relative -- -$s  0
        bindsym Down  exec --no-startup-id xdotool mousemove_relative --  0   $s
        bindsym Up    exec --no-startup-id xdotool mousemove_relative --  0  -$s
        bindsym Right exec --no-startup-id xdotool mousemove_relative --  $s  0

        bindsym Shift+Left  exec --no-startup-id xdotool mousemove_relative -- -$l   0
        bindsym Shift+Down  exec --no-startup-id xdotool mousemove_relative --  0    $l
        bindsym Shift+Up    exec --no-startup-id xdotool mousemove_relative --  0   -$l
        bindsym Shift+Right exec --no-startup-id xdotool mousemove_relative --  $l   0

        bindsym y exec --no-startup-id xdotool click 1 #left
        bindsym u exec --no-startup-id xdotool click 2 #middle
        bindsym i exec --no-startup-id xdotool click 3 #right
        bindsym Shift+space exec --no-startup-id xdotool click --repeat 3 4 #wheel up
        bindsym space exec --no-startup-id xdotool click --repeat 3 5 #wheel down


        # back to normal: Enter, Escape or q
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
}

bindsym $mod+m mode "mouse"

# window colors
#                          border          background      text         indicator
client.focused             $bg             $bg             $fg          #00ff00
client.unfocused           $bg-alt         $bg-alt         $fg-alt      #00ff00
client.focused_inactive    $bg-alt         $bg-alt         $fg-alt      #00ff00
client.urgent              $hl             $hl             $fg          #00ff00

hide_edge_borders both

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#        colors {
#            background $bg
#            separator #757575
#            #                  border             background         text
#            focused_workspace  $bg          $bg          $fg
#            inactive_workspace $bg-alt $bg-alt $fg-alt
#            urgent_workspace   $hl   $hl   $fg
#        }
#}

show_marks yes

##############################################x

###---Basic Definitions---###
#Needed for i3-gaps

set $gap_inner  15
set $gap_outer  15

gaps inner $gap_inner
gaps outer $gap_outer

bindsym $mod+Shift+t    gaps inner current set $gap_inner; gaps outer current set $gap_outer
bindsym $mod+Shift+d    gaps inner current set 0; gaps outer current set 0

bindsym $mod+s          gaps inner current plus 5
bindsym $mod+shift+s    gaps inner current minus 5
bindsym $mod+z          gaps outer current plus 5
bindsym $mod+Shift+z    gaps outer current minus 5

# i3gaps issue: https://github.com/Airblader/i3/issues/29
for_window [class="^.*"] border pixel 0

#set $term UXTerm
set $term termite

# deprecated
#set $lock_picture "~/.config/lock"

# lock machine
#bindsym $mod+shift+x exec i3lock -i $lock_picture
bindsym $mod+shift+x exec ~/Scripts/lock.sh

# shutdown, suspend and reboot
bindsym $mod+shift+p exec ~/Scripts/lock.sh && sleep 1 && systemctl suspend
# TODO: have some notification before reboot and shutdown, maybe rofi/dmenu
bindsym $mod+shift+u exec ~/Scripts/custom_exit.sh -shutdown
bindsym $mod+shift+o exec ~/Scripts/custom_exit.sh -reboot


# get special keys with this command:
# xmodmap -pke

# get id for pactl:
# pactl list short sinks
# Pulse Audio controls
# TODO: replace this with Scripts/pavolume.sh
bindsym XF86AudioRaiseVolume exec ~/Scripts/pavolume.sh --up
bindsym XF86AudioLowerVolume exec ~/Scripts/pavolume.sh --down
bindsym XF86AudioMute exec ~/Scripts/pavolume.sh --togmute



#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 1 +5% #increase sound volume
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 1 -5% #decrease sound volume
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 1 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness

# Touchpad controls
#bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
# TODO: replace with mpd/mpc/ncmpcpp
#bindsym XF86AudioPlay exec playerctl play
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

set $screenshot_name '%Y-%m-%d_%H:%M:%S_$wx$h.png'
set $screenshot_folder '~/shots/'

bindsym --release Print exec --no-startup-id scrot $screenshot_name -e 'mv $f $screenshot_folder'
bindsym --release Shift+Print exec --no-startup-id scrot -s $screenshot_name -e 'mv $f $screenshot_folder'
bindsym --release $mod+Shift+Print exec --no-startup-id scrot -u -d 4 $screenshot_name -e 'mv $f $screenshot_folder'

# TODO: arandr for multiple monitors
#

# don't turn off screen after inactivity (annoying while watching videos)
exec_always xset s off
exec_always xset -dpms
exec_always xset s noblank

#exec_always compton -f

# set background
exec_always --no-startup-id feh --bg-scale ~/.config/wall
#exec --no-startup-id nitrogen --restore


# Wal, dunst and polybar combined - waiting for wal values first
# Currently wait a bit before executing due to a known bug
# https://bbs.archlinux.org/viewtopic.php?id=200797
# Modify sleep time from machine to machine
exec_always --no-startup-id sleep 2; sh ~/Scripts/beautify.sh

